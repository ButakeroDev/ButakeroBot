FROM --platform=linux/amd64 golang:1.21-alpine3.18 AS builder

# Instalar las dependencias necesarias para la compilación
RUN apk add --no-cache build-base opus-dev opusfile-dev \
    && go install github.com/bwmarrin/dca/cmd/dca@latest

# Establecer el directorio de trabajo
WORKDIR /src/

# Copiar los archivos de go.mod y go.sum para instalar las dependencias
COPY go.mod go.sum ./
RUN go mod download

# Copiar el código fuente del proyecto
COPY cmd/ cmd/
COPY internal/ internal/

# Compilar el binario usando la arquitectura amd64
RUN CGO_ENABLED=1 GOARCH=amd64 GOMAXPROCS=4 go build -ldflags="-s -w" -o /bin/butakero cmd/main.go

# Etapa final del contenedor
# Usar la imagen base de Alpine para arquitectura amd64
FROM --platform=linux/amd64 alpine:edge

# Definir las variables de entorno necesarias
ENV DISCORD_TOKEN=
ENV COMMAND_PREFIX=
ENV YOUTUBE_API_KEY=
ENV BUCKET_NAME=
ENV REGION=
ENV ACCESS_KEY=
ENV SECRET_KEY=
ENV USERNAME=
ENV PASSOWRD=

# Instalar las dependencias necesarias para la ejecución del binario
RUN apk add --no-cache ffmpeg wget opusfile yt-dlp \
    && apk add --no-cache gcompat libstdc++ \
    # Actualizar yt-dlp a la última versión
    && apk -U upgrade yt-dlp

# Copiar el binario compilado desde la etapa de construcción
COPY --from=builder /bin/butakero /bin/butakero
# Copiar la herramienta dca compilada desde la etapa de construcción
COPY --from=builder /go/bin/dca /usr/local/bin/dca

# Definir el comando de inicio del contenedor
CMD ["/bin/butakero"]
