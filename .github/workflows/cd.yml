name: Go Continuous Delivery Pipeline

on:
  workflow_run:
    workflows: ["Go Development Pipeline"]
    types:
      - completed
    branches:
      - master

jobs:
  deploy:
    name: Deploy a EC2
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Configurar credenciales de AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
    
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Logearse a Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      
      - name: Buildear y pushear la imagen
        uses: docker/build-push-action@v5
        with:
          context: .
          file: dockerfile.aws
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/butakero-bot-aws:latest
          platforms: linux/arm64
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Setear variable de entorno
        run: |
          echo "DISCORDTOKEN=${{ secrets.DISCORDTOKEN }}" >> .env
          echo "COMMANDPREFIX=${{ secrets.COMMANDPREFIX }}" >> .env

      - name: Build and push Docker image
        run: |
          docker compose -f production-docker-compose.yml build
          docker compose -f production-docker-compose.yml push
    
      - name: Copie production-docker-compose.yml a EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST_IP }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: ./production-docker-compose.yml
          target: /opt/app/config/production-docker-compose.yml  

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST_IP }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -e
            cd /opt/app/config 
            sudo docker-compose -f production-docker-compose.yml down
            sudo docker-compose -f production-docker-compose.yml up -d
